version: 0.2
workspace:
  type: kubernetes
  specs:
    kubernetes:
      image:
        value: index.docker.io/marktmilligan/airflow:dev-url
      container-based-vm:
        value: false
      cpu: 
        value: 2
      memory:
        value: 2 
      disk:
        value: 10
      gpu-count:
        value: 0
      labels:
        value:
          com.coder.custom.chargeback: "team_airflow"
  configure:
    start:
      value:
        - name: "set ssh keys"
          command: |
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
        - name: "clone airflow project"
          command: |
            REPO_1_PATH=$HOME/airflow_wac
            if [ -d $REPO_1_PATH ]; then
              echo 'airflow repo already exists - skip clone, do fetch and reset'
              cd $REPO_1_PATH
              git fetch --all
              git reset --hard origin/main
            else
              echo 'airflow repo DOES NOT exists, git clone'
              git clone git@github.com:mtm20176/airflow_wac.git 
              cd $REPO_1_PATH
            fi    
        - name: "move DAGS to ~/airflow/dags"
          command: |
            REPO_1_PATH=$HOME/airflow_wac
            DAGS_PATH=$HOME/airflow/dags
            if [ -d $DAGS_PATH ]; then
              echo 'DAGS folder already exists - skip move'
            else
              echo 'dags folder DOES NOT exists, copy DAG examples'
              mkdir -p $DAGS_PATH
              cp $REPO_1_PATH/dags/helloworld.py $DAGS_PATH
              cp $REPO_1_PATH/dags/datatest.py $DAGS_PATH
            fi 
        - name: clone pandas repo
          continue-on-error: true
          directory: /home/coder/
          shell: /bin/bash
          command: |
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            REPO_1_PATH=$HOME/pandas_automl 
            if [ -d $REPO_1_PATH ]; then
              echo 'datasets and pandas jupyter notebook repo already exists - skip clone'
            else
              git clone git@github.com:mtm20176/pandas_automl.git 
            fi  
        - name: install 1 vscode Python extension (vsix) from open vsx
          continue-on-error: true
          directory: /home/coder/
          shell: /bin/bash
          command: SERVICE_URL=https://open-vsx.org/vscode/gallery ITEM_URL=https://open-vsx.org/vscode/item /var/tmp/coder/code-server/bin/code-server --install-extension ms-python.python                                      
        - name: "install vim editor"
          directory: /home/coder/
          shell: /bin/bash
          command: |
            continue-on-error: true
            if [ -f "/etc/arch-release" ]; then
              echo "Arch Linux"
              sudo pacman -S vim --noconfirm
              echo 'installed vim'
            elif [ -f "/etc/lsb-release" ]; then
              echo "Ubuntu" 
              sudo apt update
              sudo apt install vim
              echo 'installed vim'
            fi
